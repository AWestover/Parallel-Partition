@inproceedings{FrigoLe09,
  title={Reducers and other Cilk++ hyperobjects},
  author={Frigo, Matteo and Halpern, Pablo and Leiserson, Charles E and Lewin-Berlin, Stephen},
  booktitle={Proceedings of the twenty-first annual symposium on Parallelism in algorithms and architectures},
  pages={79--90},
  year={2009},
  organization={ACM}
}

%% Here, parallel partition is referred to as a filter operation
@article{Blelloch96,
  title={Programming parallel algorithms},
  author={Blelloch, Guy E},
  journal={Communications of the ACM},
  volume={39},
  number={3},
  pages={85--97},
  year={1996},
  publisher={ACM}
}

%% Here, parallel partition is referred to as a filter operation
@misc{AcarBl16,
  title={Algorithm design: Parallel and sequential},
  author={Acar, Umut A and Blelloch, Guy},
  year={2016}
}

@article{Brent74,
  title={The parallel evaluation of general arithmetic expressions},
  author={Brent, Richard P},
  journal={Journal of the ACM (JACM)},
  volume={21},
  number={2},
  pages={201--206},
  year={1974},
  publisher={ACM}
}

@book{CLRS,
  title={Introduction to algorithms},
  author={Cormen, Thomas H and Leiserson, Charles E and Rivest, Ronald L and Stein, Clifford},
  year={2009},
  publisher={MIT press}
}

@article{BlumofeJo96,
  title={Cilk: An efficient multithreaded runtime system},
  author={Blumofe, Robert D and Joerg, Christopher F and Kuszmaul, Bradley C and Leiserson, Charles E and Randall, Keith H and Zhou, Yuli},
  journal={Journal of parallel and distributed computing},
  volume={37},
  number={1},
  pages={55--69},
  year={1996},
  publisher={Elsevier}
}

@article{BlumofeLe99,
  title={Scheduling multithreaded computations by work stealing},
  author={Blumofe, Robert D and Leiserson, Charles E},
  journal={Journal of the ACM (JACM)},
  volume={46},
  number={5},
  pages={720--748},
  year={1999},
  publisher={ACM}
}

@article{Hagerup89,
  title={Optimal merging and sorting on the EREW PRAM},
  author={Hagerup, Torben and R{\"u}b, Christine},
  journal={Information Processing Letters},
  volume={33},
  number={4},
  pages={181--185},
  year={1989},
  publisher={Elsevier}
}

%% This paper shows how to merge in place. Is likely not practical, however. Our algorithm may be the first practical in-place sort in EREW
@article{Katajainen93,
  title={Space-efficient parallel merging},
  author={Katajainen, Jyrki and Levcopoulos, Christos and Petersson, Ola},
  journal={RAIRO-Theoretical Informatics and Applications},
  volume={27},
  number={4},
  pages={295--310},
  year={1993},
  publisher={EDP Sciences}
}

%% Practical serial in-place merging
@article{HuangLa88,
  title={Practical in-place merging},
  author={Huang, Bing-Chao and Langston, Michael A},
  journal={Communications of the ACM},
  volume={31},
  number={3},
  pages={348--352},
  year={1988},
  publisher={ACM}
}

@article{Vitter08,
  title={Algorithms and data structures for external memory},
  author={Vitter, Jeffrey Scott},
  journal={Foundations and Trends{\textregistered} in Theoretical Computer Science},
  volume={2},
  number={4},
  pages={305--474},
  year={2008},
  publisher={Now Publishers, Inc.}
}

%% Merging with constant depth in CREW model under assumption arrays consist of integers
@article{Bahig18,
  title={A new constant-time parallel algorithm for merging},
  author={Bahig, Hazem M},
  journal={The Journal of Supercomputing},
  pages={1--16},
  year={2018},
  publisher={Springer}
}

%% An in-place parallel sample-sort using CRCW model with atomic operations
@article{AxtmannWi17,
  title={In-place Parallel Super Scalar Samplesort},
  author={Axtmann, Michael and Witt, Sascha and Ferizovic, Daniel and Sanders, Peter},
  journal={arXiv preprint arXiv:1705.02257},
  year={2017}
}

@inproceedings{BlellochFi12,
  title={Internally deterministic parallel algorithms can be fast},
  author={Blelloch, Guy E and Fineman, Jeremy T and Gibbons, Phillip B and Shun, Julian},
  booktitle={ACM SIGPLAN Notices},
  volume={47},
  number={8},
  pages={181--192},
  year={2012},
  organization={ACM}
}

%% Practical work on parallel partition. Does not concern itself with having low-span algorithms. More focused on optimizing practical algorithms for number of comparisons, or something like that.
@inproceedings{Frias08,
  title={Parallel partition revisited},
  author={Frias, Leonor and Petit, Jordi},
  booktitle={International Workshop on Experimental and Efficient Algorithms},
  pages={142--153},
  year={2008},
  organization={Springer}
}

%% A note connecting the EREW and CRCW models via integer sorting. Yet another theoretical reason to care about integer sorting.
@inproceedings{MatiasVi95,
  title={A note on reducing parallel model simulations to integer sorting},
  author={Matias, E and Vishkin, Uzi},
  booktitle={Parallel Processing Symposium, 1995. Proceedings., 9th International},
  pages={208--212},
  year={1995},
  organization={IEEE}
}

%% Reviews common sorts and notes importance of in-place-ness of bitonic sort. Bitonic sort requires $n \log^2 n$ work, however.
@article{BlellochLe98,
  title={An experimental analysis of parallel sorting algorithms},
  author={Blelloch, Guy E. and Leiserson, Charles E. and Maggs, Bruce M and Plaxton, C Greg and Smith, Stephen J and Zagha, Marco},
  journal={Theory of Computing Systems},
  volume={31},
  number={2},
  pages={135--167},
  year={1998},
  publisher={Springer}
}

%% A fast in-place parallel quicksort using atomic fetch and add.
@article{HeidelbergerNo90,
  title={Parallel quicksort using fetch-and-add},
  author={Heidelberger, Philip and Norton, Alan and Robinson, John T.},
  journal={IEEE Transactions on Computers},
  volume={39},
  number={1},
  pages={133--138},
  year={1990},
  publisher={IEEE}
}

%% Optimized memory usage in prefix sum phase to $p$. Beat serial starting with two processors. (So do we, at least as of my writing this)
@inproceedings{LiuKn05,
  title={A cost optimal parallel quicksorting and its implementation on a shared memory parallel computer},
  author={Liu, Jie and Knowles, Clinton and Davis, Adam Brian},
  booktitle={International Symposium on Parallel and Distributed Processing and Applications},
  pages={491--502},
  year={2005},
  organization={Springer}
}

%% A late rediscovery of the EREW algorithm.
@inproceedings{LiuHe03,
  title={A Cost Optimal Parallel Quicksort on CREW PRAM.},
  author={Liu, Jie and He, Jackson},
  booktitle={Computers and Their Applications},
  pages={13--16},
  year={2003}
}

%% Uses fetch-and-add algorithm. Not sure if it's in-place. All links to paper are broken.
@inproceedings{TsigasZh03,
  title={A simple, fast parallel implementation of quicksort and its performance evaluation on SUN enterprise 10000},
  author={Tsigas, Philippas and Zhang, Yi},
  booktitle={Proceedings of the Eleventh Euromicro Conference on Parallel, Distributed and Network-Based Processing},
  pages={372},
  year={2003},
  organization={IEEE}
}

@article{Kleen05,
  title={A numa api for linux},
  author={Kleen, Andi},
  journal={Novel Inc},
  year={2005}
}

%% A Linear-span algorithm with a good engineering constant and that behaves well on random inputs; Even then I think it will have span at least sqrt(n).
@article{FrancisPa92,
  title={A parallel partition for enhanced parallel quicksort},
  author={Francis, Rhys S. and Pannan, LJH},
  journal={Parallel Computing},
  volume={18},
  number={5},
  pages={543--550},
  year={1992},
  publisher={Elsevier}
}

@inproceedings{Anderson90,
  title={Parallel algorithms for generating random permutations on a shared memory machine},
  author={Anderson, R\_},
  booktitle={Proceedings of the second annual ACM Symposium on Parallel Algorithms and Architectures},
  pages={95--102},
  year={1990},
  organization={ACM}
}

@article{AlonsoSc96,
  title={A parallel algorithm for the generation of a permutation and applications},
  author={Alonso, Laurent and Schott, Ren{\'e}},
  journal={Theoretical Computer Science},
  volume={159},
  number={1},
  pages={15--28},
  year={1996},
  publisher={Elsevier}
}

@inproceedings{ShunGu15,
  title={Sequential random permutation, list contraction and tree contraction are highly parallel},
  author={Shun, Julian and Gu, Yan and Blelloch, Guy E and Fineman, Jeremy T and Gibbons, Phillip B},
  booktitle={Proceedings of the twenty-sixth annual ACM-SIAM symposium on Discrete algorithms},
  pages={431--448},
  year={2015},
  organization={Society for Industrial and Applied Mathematics}
}

@article{Rajasekaran92,
  title={On parallel integer sorting},
  author={Rajasekaran, Sanguthevar and Sen, Sandeep},
  journal={Acta Informatica},
  volume={29},
  number={1},
  pages={1--15},
  year={1992},
  publisher={Springer}
}

@incollection{HanHe12,
  title={More efficient parallel integer sorting},
  author={Han, Yijie and He, Xin},
  booktitle={Frontiers in Algorithmics and Algorithmic Aspects in Information and Management},
  pages={279--290},
  year={2012},
  publisher={Springer}
}

@article{AlbersHa97,
  title={Improved parallel integer sorting without concurrent writing},
  author={Albers, Susanne and Hagerup, Torben},
  journal={Information and Computation},
  volume={136},
  number={1},
  pages={25--51},
  year={1997},
  publisher={Elsevier}
}

@inproceedings{Han01,
  title={Improved fast integer sorting in linear space},
  author={Han, Yijie},
  booktitle={Proceedings of the twelfth annual ACM-SIAM symposium on Discrete algorithms},
  pages={793--796},
  year={2001},
  organization={Society for Industrial and Applied Mathematics}
}

@article{GerbessiotisSi04,
  title={Probabilistic integer sorting},
  author={Gerbessiotis, Alexandros V and Siniolakis, Constantinos J},
  journal={Information processing letters},
  volume={90},
  number={4},
  pages={187--193},
  year={2004},
  publisher={Citeseer}
}

@article{SleatorTa85,
  title={Amortized efficiency of list update and paging rules},
  author={Sleator, Daniel D and Tarjan, Robert E},
  journal={Communications of the ACM},
  volume={28},
  number={2},
  pages={202--208},
  year={1985},
  publisher={ACM}
}
